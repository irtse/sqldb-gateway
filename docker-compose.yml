version: '3.1'

services:
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    # if you are running as root then set it to 0
    # else find the right id with the id -u command
    user: '0'
    ports:
      - '3000:3000'
    # adding the mount volume point which we create earlier
    volumes:
      - '$PWD/data:/var/lib/grafana'
  pg:
    image: postgres:alpine
    container_name: ${DBHOST:-sqldb-ws-pg}
    restart: always
    volumes:
      - ./db/autoload:/docker-entrypoint-initdb.d
      - /opt/data/containers/sqldb/pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DBNAME:-test}
      POSTGRES_USER: ${DBUSER:-test}
      POSTGRES_PASSWORD: ${DBPWD:-test}
    ports: 
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - 8443:8080

  sqldb-ws:
    image: irtse/sqldb-ws:latest
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports: 
      - 8080:8080
    volumes:
      - ./files:/mnt/files
    environment:
      SMTP_HOST: ${SMTP_HOST:-mail.irt-saintexupery.com}
      SMTP_PORT: ${SMTP_PORT:-22}
      SUPERADMIN_NAME: ${SUPERADMIN_NAME:-root}
      SUPERADMIN_EMAIL: ${SUPERADMIN_EMAIL:-morgane.roques@irt-saintexupery.com}
      SUPERADMIN_PASSWORD: ${SUPERADMIN_PASSWORD:-admin}
      AUTH_MODE: ${AUTH_MODE:-token}
      DBDRIVER : ${DBDRIVER:-postgres}
      DBHOST : ${DBHOST:-sqldb-ws-pg}
      DBPORT : ${DBPORT:-5432}
      DBUSER : ${DBUSER:-test}
      DBPWD : ${DBPWD:-test}
      DBNAME: ${DBNAME:-test}
      DBSSL: ${DBSSL:-disable}

#  grafana:
#    image: grafana/grafana:9.5.12
#    restart: always
#    environment:
#      GF_SMTP_ENABLED: "true"
#      GF_SMTP_HOST: "smtp.example.com"
#    ports:
#      - "3000:3000"
#    volumes:
#      - /opt/data/containers/sqldb/grafana:/var/lib/grafana
#    depends_on:
#      - pg